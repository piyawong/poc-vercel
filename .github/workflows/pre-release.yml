name: PR-Release

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  pr-draft-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.save_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Get the PR number
        uses: actions/github-script@v7
        id: get_pr_data
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              throw new Error('No pull request found');
            }
            return pr;

      - name: Save version from PR number
        id: save_version
        run: |
          echo "version=0.0.0-PR.${{ fromJson(steps.get_pr_data.outputs.result).number }}" >> "$GITHUB_OUTPUT"
          echo "pr_number=${{ fromJson(steps.get_pr_data.outputs.result).number }}" >> "$GITHUB_OUTPUT"

      - name: Replace version in package.json
        run: echo "`jq '.version="${{ steps.save_version.outputs.version }}"' ./package.json`" > ./package.json

      - run: echo "PACKAGE_JSON=$(jq -c . < ./package.json)" >> $GITHUB_ENV
      - run: echo '${{ fromJson(env.PACKAGE_JSON).version }}'

      - name: Debug package.json
        run: cat ./package.json

      - name: Install the dependencies
        run: yarn install --frozen-lockfile --network-timeout 500000

      - name: Build the application
        run: yarn build
      - name: Debug the application
        run: ls

      - name: Deploy to Firebase Hosting
        uses: w9jds/firebase-action@v13.7.2
        with:
          args: hosting:channel:deploy ${{ steps.save_version.outputs.pr_number }} --expires 7d
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
